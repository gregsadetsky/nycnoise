name: Django CI

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: "main - nycnoise"
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: localhost # default host value for the database
      POSTGRES_DB: djtesting
      POSTGRES_PORT: 5432
    services:
      postgres_main:
        image: postgres:12
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        run: |
          python manage.py test
        env:
          DATABASE_URL: "postgres://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@${{ env.POSTGRES_HOST }}:${{ env.POSTGRES_PORT }}/${{ env.POSTGRES_DB }}"
          DJANGO_SECRET_KEY: "${{ vars.DJANGO_SECRET_KEY }}"
          ALLOWED_HOSTS: "${{ vars.ALLOWED_HOSTS }}"
          DJANGO_SETTINGS_MODULE: "${{ vars.DJANGO_SETTINGS_MODULE }}"
          RC_DEVELOPER_INTERNAL_TOKEN: "${{ vars.RC_DEVELOPER_INTERNAL_TOKEN }}"
          PROD_INTERNAL_API_SERVER: "${{ vars.PROD_INTERNAL_API_SERVER }}"
          DEBUG_TOOLBAR_ENABLE: "${{ vars.DEBUG_TOOLBAR_ENABLE }}"
          PYINSTRUMENT_ENABLE: "${{ vars.PYINSTRUMENT_ENABLE }}"
